/// entity is the superclass for units, buildings, etc, and represents an on-screen, in-game object. 
abstract module entity 
extends "data.pkl"

import "types.pkl" 

fixed type = "entity"
fixed subtype = entity_type

entity_type: EntityType
typealias EntityType =
  "unit/army" | "unit/worker" | "unit/harvester" |
  "building/base" | "building/extractor" |
  "building/supply" | "building/special" |
  "building/production" | "building/tech" 

/// hexite cost to build. 0 for entities that are cast
hexite: UInt = 0
flux: UInt = 0
count: UInt = 1
cooldown: UInt?
topbar: UInt?
build_time: UInt?
rebuildable: Boolean?
rebuild_time: UInt(rebuildable == true)?

tier: Tier

supply: UInt((i) -> isUnit())?
hp: UInt?
vision: UInt?
speed: UInt?
shields: UInt?
abes: UInt?
energy: UInt?
armor: UInt?

armor_type: ArmorType = "none"
typealias ArmorType = "none" | "light" | "medium" | "heavy"

stun_resist: UInt?

provides_supply: UInt?
provides_biomass: UInt?
provides_upgrades_for: Listing<String>(isDistinct)?

transforms_from: String?
transforms_into: Listing<String>(isDistinct)?
