abstract module entity 
extends "data.pkl"

import "types.pkl" 

fixed type = "entity"

typealias ArmorType = "none" | "light" | "medium" | "heavy"
typealias Tier = "T0" | "T1" | "T2" | "T3" | "T1.5" | "T2.5" | "T3.5"

hexite: UInt = 0
flux: UInt = 0
count: UInt = 1
cooldown: UInt?
topbar: UInt?
buildTime: UInt?
rebuildable: Boolean?
rebuildTime: UInt(rebuildable == true)?

supply: UInt((i) -> isUnit())?
hp: UInt?
vision: UInt?
speed: UInt?
shields: UInt?
abes: UInt?
energy: UInt?
armor: UInt?
armor_type: ArmorType = "unarmored"
stunResist: UInt?

produces: Listing<String>(isDistinct)?
producedBy: Listing<String>(isDistinct)?

builds: Listing<String>(isDistinct)?
builtBy: Listing<String>(isDistinct)?

unlocks: Listing<String>(isDistinct)?
unlockedBy: Listing<String>(isDistinct)?

unlocksMercs: Listing<Tier>(isDistinct)?
providesSupply: UInt?
providesBiomass: UInt?
providesUpgrades: Listing<String>(isDistinct)?

transformsFrom: String?
transformsInto: Listing<String>(isDistinct)?
