abstract module unit 
extends "../gamepiece.pkl"

import "../infuse.pkl" as $i
import "../upgrade/unit_upgrade.pkl" as UnitUpgrade

fixed type = "unit"
fixed subtype = unit_type

tag { "unit" }
hidden unit_type: "worker" | "harvester" | "army" | "hero" | "merc"

vision = 1800

local tl = tags.toList()

infusable: Boolean = unit_type == "army" && !tl.contains("massive")

infuse_rule: $i.InfuseRule? = 
  if (!infusable) 
    null 
  else
    $i.standard_infuse_rule

infuse_cost: UInt? = 
  if (!infusable) 
    null 
  else
    let (h = hexite_cost ?? 0)
    let (f = flux_cost ?? 0)
    ((h + f) / 10).floor.toInt() + 1

local df = this.faction
local ds = this.slug

upgrades: Listing<UnitUpgrade> = new Listing<UnitUpgrade> {
  default { faction = df; upgrade_of = ds }
}
