abstract module faction
extends "../data.pkl"
import "../upgrade/talent.pkl" as Talent
import "../ability/topbar.pkl" as TopBarPower
import "../building/building.pkl" as Building
import "../unit/unit.pkl" as Unit
import "../unit/hero.pkl" as Hero

fixed type = "faction"
fixed subtype = faction_type

/// the three core types of faction
hidden fixed faction_type: FactionType
typealias FactionType = "main" | "merc" | "ai"

/// whether or not this type should be playable
fixed playable = faction_type != "ai"

local faction_slug = this.slug
/// talents. 10 for main faction, 5 for mercs.
talents: Mapping<String, Talent>?

/// topbar abilities. should be 4.
topbar: Mapping<String, TopBarPower>?

/// all of the buildings that can be built by this faction, including its base and extractor
buildings: Mapping<String, Building>?
/// all of the units that can be built or cast by this faction, including its worker and harvester
units: Mapping<String, Unit>?
/// which heroes the player can choose if they select this faction
heroes: Mapping<String, Hero>?

