module path_data
import "types.pkl" as $t

class PathData {
  faction: String?
  faction_type: ("main" | "merc" | "nonplayer")?
  type: ("unit" | "building" | "turret" | "faction" | "ability" | "upgrade" | "map")?
  subtype: String?

  tier: $t.Tier?
  hexite_cost: Number?
  flux_cost: Number?
  build_time: Number?
  rebuild_time: Number?
  gathers_flux: Number?
  gathers_rich_flux: Number?
  gathers_hexite: Number?
  gathers_empty_hexite: Number?
  hp: Number?
  supply: Number?
  speed: Number?
  vision: Number?
  armor: Number?
  armor_type: $t.ArmorType?
  rebuildable: Boolean?
  provides_supply: Number?
  provides_biomass: Number?

  // abilities can be nested or in a full file, cant use subpath for this
  ability_type: String?
  ability_of: String?
  slot: Number?
  topbar_type: String?
  level: Number?
  column: Number?

  tags: Listing<String>
}

function dataFromPath(p: List<String>): PathData = new {
  when (p.first == "maps") {
    type = "map"
    subtype = p[1]
  }
  when (p.first == "factions") {
    local len = p.length
    faction_type = p[1]
    faction = p[2]
    when (p.length == 3) {
      type = "faction"
      subtype = faction_type
      tags { "faction:\(faction_type)" }
      when (subtype != slug) {
        local e = throw("faction slug must match faction subtype directory") 
      }
    }
  }
  when (p.contains("unit")) {
    type = "unit" 
    vision = 1800
  }
  when (p.contains("harvester")) {
    subtype = "harvester"; 
    tier = "T0" 
    hexite_cost = 175
    build_time = 25
    rebuild_time = 60
    gathers_flux = 1.5
    gathers_rich_flux = 3.0
    hp = 400
    speed = 450
    armor_type = "medium"
    rebuildable = true
    supply = 0
  }
  when (p.contains("builder")) { subtype = "builder"; tier = "T0"; supply = 0 }
  when (p.contains("tier_1")) {
    when (p.contains("unit")) { subtype = "army" }
    tier = "T1" 
  }
  when (p.contains("tier_2")) {
    when (p.contains("unit")) { subtype = "army" }
    tier = "T2" 
  }
  when (p.contains("tier_3")) {
    when (p.contains("unit")) { subtype = "army" }
    tier = "T3" 
  }
  when (p.contains("hero")) { 
    when (!p.contains("tier_2")) { tier = "T2" }
    subtype = "hero"; 
    build_time = 30
    rebuild_time = 60
    rebuildable = true
    supply = 10
  }
  when (p.contains("ultimate")) { 
    when (p.contains("unit")) { subtype = "ultimate"; tier = "T4"; supply = 0  }
    when (p.contains("building")) { subtype = "ultimate"; tier = "T4" }
  }
  when (p.contains("building")) {
    type = "building"
    vision = 1500
  }

  when (p.contains("base")) {
    subtype = "base"
    hp = 2000 
    hexite_cost = 350
  }
  when (p.contains("extractor")) {
    subtype = "extractor"
    armor = 0
    gathers_hexite = 1.0
    gathers_empty_hexite = 0.35
  }
  when (p.contains("supply")) { subtype = "supply"; provides_supply = 15; hexite_cost = 100; build_time = 15; hp = 750 }
  when (p.contains("special")) { subtype = "special" }

  when (p.contains("production")) {
    subtype = "production"
    build_time = 40
  }

  when (p.contains("tech")) {
    subtype = "tech"
    hp = 1000
    hexite_cost = 100
    flux_cost = 25
  }

  when (p.contains("level_1")) { level = 1 }
  when (p.contains("level_2")) { level = 2 }
  when (p.contains("level_3")) { level = 3 }
  when (p.contains("level_4")) { level = 4 }
  when (p.contains("level_5")) { level = 5 }
  when (p.contains("column_1")) { column = 1 }
  when (p.contains("column_2")) { column = 2 }
  when (p.contains("column_3")) { column = 3 }
  when (p.contains("slot_1")) { slot = 1 }
  when (p.contains("slot_2")) { slot = 2 }
  when (p.contains("slot_3")) { slot = 3 }
  when (p.contains("slot_4")) { slot = 4 }

  when (p.contains("talent")) {
    type = "faction-ability"
    ability_type = "topbar"
    ability_of = p[2]
  }

  when (p.contains("topbar")) {
    type = "ability"
    ability_type = "topbar-power"
    ability_of = p[2]
    when (p.contains("recall")) { topbar_type = "recall" }
    when (p.contains("special")) { topbar_type = "special" }
    when (p.contains("ultimate")) { topbar_type = "ultimate" }
  }

  when (p.contains("passive")) { type = "ability" ; subtype = "faction-passive"; ability_of = p[2] }
}
