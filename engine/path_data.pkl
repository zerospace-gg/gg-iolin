module path_data
import "types.pkl" as $t

class PathData {
  faction: String?
  faction_type: ("main" | "merc" | "nonplayer")?
  type: ("unit" | "building" | "turret" | "faction" | "ability" | "upgrade" | "map")?
  subtype: String?

  tier: $t.Tier?
  hexite_cost: Number?
  flux_cost: Number?
  build_time: Number?
  rebuild_time: Number?
  gathers_flux: Number?
  gathers_rich_flux: Number?
  gathers_hexite: Number?
  gathers_empty_hexite: Number?
  hp: Number?
  supply: Number?
  speed: Number?
  vision: Number?
  armor: Number?
  armor_type: $t.ArmorType?
  rebuildable: Boolean?
  provides_supply: Number?
  provides_biomass: Number?

  tags: Listing<String>
}

function dataFromPath(p: List<String>): PathData = new {
  when (p[0] == "maps") {
    type = "map"
    subtype = p[1]
  }
  when (p[0] == "factions") {
    local len = p.length
    faction_type = p[1]
    faction = p[2]
    when (p.length == 3) {
      type = "faction"
      subtype = faction_type
      tags { "faction:\(faction_type)" }
      when (subtype != slug) {
        local e = throw("faction slug must match faction subtype directory") 
      }
    }
    when (p[3] == "unit") {
      type = "unit" 
      vision = 1800
      when (p[4] == "harvester") { 
        subtype = "harvester"; 
        tier = "T0" 
        hexite_cost = 175
        build_time = 25
        rebuild_time = 60
        gathers_flux = 1.5
        gathers_rich_flux = 3.0
        hp = 400
        speed = 450
        armor_type = "medium"
        rebuildable = true
        supply = 0
      }
      when (p[4] == "builder") { subtype = "builder"; tier = "T0"; supply = 0 }
      when (p[4] == "tier_1") { subtype = "army"; tier = "T1" }
      when (p[4] == "tier_2") { subtype = "army"; tier = "T2" }
      when (p[4] == "tier_3") { subtype = "army"; tier = "T3" }
      when (p[4] == "hero") { 
        subtype = "hero"; 
        tier = "T2" 
        build_time = 30
        rebuild_time = 60
        rebuildable = true
        supply = 10
      }
      when (p[4] == "ultimate") { subtype = "ultimate"; tier = "T4"; supply = 0 }
    }
    when (p[3] == "building") {
      type = "building"
      vision = 1500

      when (p[4] == "base") {
        subtype = "base"
        hp = 2000 
        hexite_cost = 350
      }
      when (p[4] == "extractor") {
        subtype = "extractor"
        armor = 0
        gathers_hexite = 1.0
        gathers_empty_hexite = 0.35
      }
      when (p[4] == "supply") { subtype = "supply"; provides_supply = 15; hexite_cost = 100; build_time = 15; hp = 750 }
      when (p[4] == "special") { subtype = "special" }
      when (p[4].startsWith("tier_1")) { tier = "T1"; }
      when (p[4].startsWith("tier_2")) { tier = "T2"; }
      when (p[4].startsWith("tier_3")) { tier = "T3"; }
      when (p[4] == "ultimate") { subtype = "ultimate"; tier = "Ultimate" }
      when (p[4].endsWith("production")) {
        subtype = "production"
        build_time = 40
        hp = 
          if (tier == "T1") 1000
          else if (tier == "T2") 1200
          else if (tier == "T3") 1400
          else null

        hexite_cost = 
          if (tier == "T1") 100
          else if (tier == "T2") 150
          else if (tier == "T3") 150
          else null

        flux_cost = 
          if (tier == "T1") 0
          else if (tier == "T2") 50
          else if (tier == "T3") 150
          else null
      }
      when (p[4].endsWith("_tech")) {
        subtype = "tech"
        build_time = 
          if (tier == "T1") 25
          else if (tier == "T2") 30
          else if (tier == "T3") 35
          else null

        hp = 1000
        hexite_cost = 100
        flux_cost = 25
      }
    }
    when (p[3] == "talent") {
      type = "ability"
      subtype = "faction-talent"
      ability_of = faction

      when (p[4].endsWith("column_1")) { column = 1 }
      when (p[4].endsWith("column_2")) { column = 2 }
      when (p[4].endsWith("column_3")) { column = 3 }

      when (p[4].startsWith("level_1")) { level = 1 }
      when (p[4].startsWith("level_2")) { level = 2 }
      when (p[4].startsWith("level_3")) { level = 3 }
      when (p[4].startsWith("level_4")) { level = 4 }
      when (p[4].startsWith("level_5")) { level = 5 }
    }
    when (p[3] == "passive") { type = "ability" ; subtype = "faction-passive"; ability_of = faction }
  }
}
