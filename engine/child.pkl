abstract module child
extends "data.pkl"
import "parent_info.pkl" as ParentInfo
import "types.pkl" as $t

hidden parent: ParentInfo 
hidden fixed sub_slug = $t.makeSlug(name)

fixed src: String = parent.src
fixed slug: $t.Slug = 
  if (subtype == sub_slug) 
    "\(parent.slug)-\(sub_slug)" 
  else 
  "\(parent.slug)-\(subtype)-\(sub_slug)"

fixed id: $t.Id = "\(parent.id)/\(subtype)/\(slug)"
fixed belongs_to: String = parent.slug

fixed faction: String? = parent.from_path.faction
fixed faction_type: String? = parent.from_path.faction_type

hidden fixed extend_tags: Listing<String> = (super.extend_tags) { "belongs_to:\(parent.slug)" }
